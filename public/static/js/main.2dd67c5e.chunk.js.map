{"version":3,"sources":["components/helpers/fetch.js","components/helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js","types/types.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","events","map","ev","end","moment","toDate","start","eventAddNew","event","type","types","EVENT_ADD_NEW","payload","eventClearActiveEvent","EVENT_CLEAN_ACTIVE","eventUpdate","EVENT_UPDATE","eventDelete","EVENT_DELETE","eventLoaded","EVENT_LOADED","checkingFinish","AUTH_CHECKING_FINISH","login","user","AUTH_LOGIN","logout","AUTH_LOGOUT","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","clear","EVENT_CLEAN_ALL","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","UI_OPEN_MODAL","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","startDate","setStartDate","endDate","setEndDate","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","UI_CLOSE_MODAL","closeTimeoutMS","contentLabel","isOpen","onRequestClose","overlayClassName","style","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","EVENT_SET_ACTIVE","onSelectSlot","onView","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","require","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById","EVENT_START_ADD","AUTH_CHECKING","AUTH_START_LOGIN","AUTH_START_REGISTER","AUTH_START_TOKEN_RENEW"],"mappings":"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","file":"static/js/main.2dd67c5e.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === \"GET\") {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\n  const token = localStorage.getItem(\"token\") || \"\";\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === \"GET\") {\n    return fetch(url, { method, headers: { \"x-token\": token } });\n  } else {\n    return fetch(url, {\n      method,\n      headers: { \"Content-type\": \"application/json\", \"x-token\": token },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport { fetchSinToken, fetchConToken };\n","import moment from \"moment\";\nconst prepareEvents = (events = []) => {\n  return events.map((ev) => ({\n    ...ev,\n    end: moment(ev.end).toDate(),\n    start: moment(ev.start).toDate(),\n  }));\n};\n\nexport { prepareEvents };\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../components/helpers/fetch\";\nimport { prepareEvents } from \"../components/helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nconst eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    try {\n      const resp = await fetchConToken(\"events\", event, \"POST\");\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(\"error: \", error);\n    }\n  };\n};\n\nconst eventAddNew = (event) => ({\n  type: types.EVENT_ADD_NEW,\n  payload: event,\n});\nconst eventSetActive = (event) => ({\n  type: types.EVENT_SET_ACTIVE,\n  payload: event,\n});\n\nconst eventClearActiveEvent = () => ({\n  type: types.EVENT_CLEAN_ACTIVE,\n});\n\nconst eventCleanAll = () => ({\n  type: types.EVENT_CLEAN_ALL,\n});\n\nconst eventUpdate = (event) => ({\n  type: types.EVENT_UPDATE,\n  payload: event,\n});\n\nconst eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\n      const body = await resp.json();\n      if (body.ok) {\n        dispatch(eventUpdate(event));\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent;\n    try {\n      const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\n      const body = await resp.json();\n      if (body.ok) {\n        dispatch(eventDelete());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventDelete = () => ({\n  type: types.EVENT_DELETE,\n});\n\nconst eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(\"events\");\n      const body = await resp.json();\n      if (body.ok) {\n        const events = prepareEvents(body.events);\n        dispatch(eventLoaded(events));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nconst eventLoaded = (events) => ({\n  type: types.EVENT_LOADED,\n  payload: events,\n});\n\nexport {\n  eventSetActive,\n  eventClearActiveEvent,\n  eventCleanAll,\n  eventStartDelete,\n  eventStartAddNew,\n  eventStartLoading,\n  eventStartUpdate,\n};\n","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../components/helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventCleanAll } from \"./events\";\n\nconst startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n  };\n};\n\nconst startRegister = (email, password, name) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\n      \"auth/new\",\n      { name, email, password },\n      \"POST\"\n    );\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n  };\n};\n\nconst startCheking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken(\"auth/renew\");\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(login({ uid: body.uid, name: body.name }));\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nconst checkingFinish = () => ({ type: types.AUTH_CHECKING_FINISH });\n\nconst login = (user) => ({\n  type: types.AUTH_LOGIN,\n  payload: user,\n});\n\nconst startLogout = () => {\n  return async (dispatch) => {\n    localStorage.clear();\n    dispatch(logout());\n    dispatch(eventCleanAll());\n  };\n};\nconst logout = () => ({ type: types.AUTH_LOGOUT });\n\nexport { startLogin, startRegister, startCheking, startLogout, logout };\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { startLogin, startRegister } from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\";\nimport \"./login.css\";\n\nconst LoginScreen = () => {\n  const dispatch = useDispatch();\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: \"daniel.leon15@gmail.com\",\n    lPassword: \"123456\",\n  });\n\n  const { lEmail, lPassword } = formLoginValues;\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: \"Nando\",\n    rEmail: \"nando@gmail.com\",\n    rPassword1: \"123456\",\n    rPassword2: \"123456\",\n  });\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    //console.log(formLoginValues);\n    dispatch(startLogin(lEmail, lPassword));\n  };\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire(\"Error\", \"Passwords should match\", \"error\");\n    }\n    dispatch(startRegister(rEmail, rPassword1, rName));\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { LoginScreen };\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\n\nexport const Navbar = () => {\n  const { name } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\"> {name} </span>\n\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n        <i className=\"fas fa-sign-out-alt\" />\n        <span> Salir</span>\n      </button>\n    </div>\n  );\n};\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n\n    const {title, user} = event\n\n    return (\n        <div>\n            <span>{title}</span>\n            <strong> - {user.name}</strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst uiOpenModal = () => ({\n  type: types.UI_OPEN_MODAL,\n});\nconst uiCloseModal = () => ({\n  type: types.UI_CLOSE_MODAL,\n});\n\nexport { uiOpenModal, uiCloseModal };\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../actions/ui\";\nimport {\n  eventStartAddNew,\n  eventClearActiveEvent,\n  eventStartUpdate,\n} from \"../../actions/events\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nModal.setAppElement(\"#root\");\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\"); // 3:00:00\nconst nowPlus1 = now.clone().add(1, \"hours\");\n\nconst initEvent = {\n  title: \"\",\n  notes: \"\",\n  start: now.toDate(),\n  end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.calendar);\n  const dispatch = useDispatch();\n\n  const [startDate, setStartDate] = useState(now.toDate());\n  const [endDate, setEndDate] = useState(nowPlus1.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent());\n    setFormValues(initEvent);\n  };\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e);\n    setFormValues({\n      ...formValues,\n      start: e,\n    });\n  };\n\n  const handleEndDateChange = (e) => {\n    setEndDate(e);\n    setFormValues({\n      ...formValues,\n      end: e,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\"Error\", \"EndDate must be Greater than StartDate\");\n    }\n\n    if (title.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    //TODO: realizar grabacion en BBDD\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartAddNew(formValues));\n    }\n\n    setTitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      className=\"modal\"\n      closeTimeoutMS={300}\n      contentLabel=\"Example Modal\"\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      overlayClassName=\"modal-fondo\"\n      style={customStyles}\n      //   onAfterOpen={afterOpenModal}\n    >\n      <h1> {activeEvent ? \"Edit event\" : \"New event\"} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={startDate}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={endDate}\n            minDate={startDate}\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Información adicional\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiOpenModal } from \"../../actions/ui\";\n\nconst AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleClickNew = () => {\n    dispatch(uiOpenModal());\n  };\n  return (\n    <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\n      <i className=\"fas fa-plus\" />\n    </button>\n  );\n};\n\nexport { AddNewFab };\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { eventStartDelete } from \"../../actions/events\";\n\nconst DeleteEventFab = () => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(eventStartDelete());\n  };\n\n  return (\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n      <i className=\"fas fa-trash\" />\n      <span>Delete</span>\n    </button>\n  );\n};\n\nexport { DeleteEventFab };\n","import React, { useEffect, useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport { Navbar } from \"../ui/Navbar\";\nimport { messages } from \"../helpers/calendar-messages-es\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\n\nimport \"moment/locale/es\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiOpenModal } from \"../../actions/ui\";\nimport {\n  eventClearActiveEvent,\n  eventSetActive,\n  eventStartLoading,\n} from \"../../actions/events\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\n\nmoment.locale(\"es\");\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const [lastView, setLastView] = useState(\n    localStorage.getItem(\"lastView\") || \"month\"\n  );\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const { uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDoubleClickEvent = (e) => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent());\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n    //dispatch(uiOpenModal());\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem(\"lastView\", e);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? \"#367CF7\" : \"#4656\",\n      borderRadius: \"0px\",\n      opacity: 0.8,\n      display: \"block\",\n      color: \"white\",\n    };\n    return { style };\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClickEvent}\n        onSelectEvent={onSelectEvent}\n        onSelectSlot={onSelectSlot}\n        onView={onViewChange}\n        selectable={true}\n        view={lastView}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n\n      <CalendarModal />\n      <AddNewFab />\n      {activeEvent && <DeleteEventFab />}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { startCheking } from \"../actions/auth\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startCheking());\n  }, [dispatch]);\n\n  if (checking) {\n    return <h5>Hold on...</h5>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isAuthenticated={!!uid}\n          />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n            isAuthenticated={!!uid}\n          />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name:null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.AUTH_LOGIN:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n    case types.AUTH_CHECKING_FINISH:\n      return {\n        ...state,\n        checking: false,\n      };\n    case types.AUTH_LOGOUT:\n      return {\n        checking: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { authReducer };\n","import { types } from \"../types/types\";\n\n// {\n//   id: new Date().getTime(),\n//   title: \"Cumpleaños\",\n//   start: moment().toDate(),\n//   end: moment().add(2, \"hours\").toDate(),\n//   bgcolor: \"#fafafa\",\n//   notes: \"Comprar el pastel\",\n//   user: {\n//     uid: \"123\",\n//     name: \"Daniel\",\n//   },\n// },\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nconst calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.EVENT_ADD_NEW:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n    case types.EVENT_SET_ACTIVE:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n    case types.EVENT_CLEAN_ACTIVE:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n    case types.EVENT_CLEAN_ALL:\n      return {\n        ...initialState,\n      };\n    case types.EVENT_UPDATE:\n      return {\n        ...state,\n        events: state.events.map((ev) =>\n          ev.id === action.payload.id ? action.payload : ev\n        ),\n      };\n    case types.EVENT_DELETE:\n      return {\n        ...state,\n        events: state.events.filter((ev) => ev.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n    case types.EVENT_LOADED:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { calendarReducer };\n","const { types } = require(\"../types/types\");\n\nconst initialState = {\n  modalOpen: false,\n};\n\nconst uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.UI_OPEN_MODAL:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    case types.UI_CLOSE_MODAL:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { uiReducer };\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nconst rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n\nexport { rootReducer };\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport { store };\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\n\nimport \"./styles.css\";\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n","const types = {\n  //UI TYPES\n  UI_OPEN_MODAL: \"[ui] Open Modal\",\n  UI_CLOSE_MODAL: \"[ui] Close Modal\",\n\n  //EVENT TYPES\n  EVENT_START_ADD: \"[event] Start Add New\",\n  EVENT_SET_ACTIVE: \"[event] Set Active\",\n  EVENT_ADD_NEW: \"[event] Add New\",\n  EVENT_CLEAN_ACTIVE: \"[event] Clean Active\",\n  EVENT_CLEAN_ALL: \"[event] Clean All\",\n  EVENT_UPDATE: \"[event] Update\",\n  EVENT_DELETE: \"[event] Delete\",\n  EVENT_LOADED: \"[event] Loaded\",\n\n  //AUTHENTICATION TYPES\n  AUTH_CHECKING: \"[auth] Checking login state\",\n  AUTH_CHECKING_FINISH: \"[auth] Finish checking login state\",\n  AUTH_START_LOGIN: \"[auth] Start login\",\n  AUTH_LOGIN: \"[auth] Login\",\n  AUTH_START_REGISTER: \"[auth] Start register\",\n  AUTH_START_TOKEN_RENEW: \"[auth] Start token renew\",\n  AUTH_LOGOUT: \"[auth] Logout\",\n};\n\nexport { types };\n"],"sourceRoot":""}